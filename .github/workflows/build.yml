name: 构建 Tauri 应用程序

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # 允许手动触发

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # macOS Apple Silicon
            args: '--target aarch64-apple-darwin'
            target: 'aarch64-apple-darwin'
          - platform: 'macos-latest' # macOS Intel
            args: '--target x86_64-apple-darwin'
            target: 'x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # Linux x64
            args: '--target x86_64-unknown-linux-gnu'
            target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest' # Windows x64
            args: '--target x86_64-pc-windows-msvc'
            target: 'x86_64-pc-windows-msvc'
          - platform: 'windows-latest' # Windows x86
            args: '--target i686-pc-windows-msvc'
            target: 'i686-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 安装 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 安装 Rust (稳定版)
        uses: dtolnay/rust-toolchain@stable
        with:
          # 为所有平台添加目标架构
          targets: ${{ matrix.target }}

      - name: 安装 Linux 依赖 (仅 Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf build-essential

      - name: 安装 Windows 依赖 (仅 Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          # 安装 NASM 和 Perl 用于 OpenSSL 编译
          choco install nasm strawberryperl
          # 确保工具在 PATH 中
          echo "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Strawberry\perl\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: 安装前端依赖
        run: pnpm install

      - name: 构建 Tauri 应用
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 强制使用 vendored OpenSSL
          OPENSSL_STATIC: 1
          OPENSSL_VENDOR: 1
          # Windows 特定环境变量
          VCPKG_ROOT: ${{ matrix.platform == 'windows-latest' && 'C:\vcpkg' || '' }}
        with:
          args: ${{ matrix.args }}

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: 构建产物-${{ matrix.target }}-${{ github.run_number }}
          path: |
            src-tauri/target/release/bundle/
            src-tauri/target/*/release/bundle/ 