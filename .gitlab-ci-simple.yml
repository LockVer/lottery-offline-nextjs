# 简化版 GitLab CI/CD 配置
# 适用于只有 Linux Runner 的自搭建 GitLab
# 仅构建 Linux 版本，但可以验证前端构建

stages:
  - test
  - build
  - package

variables:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "1"

# 缓存配置
cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - node_modules/
    - target/
    - ~/.cargo/

# 测试阶段 - 验证代码质量
test-code:
  stage: test
  image: ubuntu:20.04
  before_script:
    - apt-get update
    - apt-get install -y curl build-essential libssl-dev pkg-config
    - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    - apt-get install -y nodejs
  script:
    - npm ci
    - npm run build
    - echo "✅ 前端构建测试通过"
  only:
    - merge_requests
    - main
    - develop

# Linux 构建 - 完整构建流程
build-linux:
  stage: build
  image: ubuntu:20.04
  before_script:
    # 安装系统依赖
    - apt-get update
    - apt-get install -y curl build-essential libssl-dev pkg-config
    - apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
    # 安装 Node.js
    - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    - apt-get install -y nodejs
    # 安装 Rust
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - source ~/.cargo/env
  script:
    - npm ci
    - npm run build
    - npm run tauri build
    - echo "✅ Linux 构建完成"
  artifacts:
    name: "linux-x64-$CI_COMMIT_SHORT_SHA"
    paths:
      - src-tauri/target/release/bundle/
      - dist/
    expire_in: 7 days
  only:
    - main
    - develop
    - tags

# 打包发布
package-release:
  stage: package
  image: alpine:latest
  dependencies:
    - build-linux
  script:
    - mkdir -p release-files
    - find . -name "*.deb" -exec cp {} release-files/ \; || true
    - find . -name "*.AppImage" -exec cp {} release-files/ \; || true
    - find . -name "*.tar.gz" -exec cp {} release-files/ \; || true
    - ls -la release-files/
    - echo "✅ 发布包准备完成"
  artifacts:
    name: "release-$CI_COMMIT_SHORT_SHA"
    paths:
      - release-files/
    expire_in: 30 days
  only:
    - tags

# 手动构建 - 用于测试
manual-build:
  stage: build
  image: ubuntu:20.04
  before_script:
    - apt-get update
    - apt-get install -y curl build-essential libssl-dev pkg-config
    - apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
    - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    - apt-get install -y nodejs
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - source ~/.cargo/env
  script:
    - npm ci
    - npm run build
    - npm run tauri build
  artifacts:
    name: "manual-build-$CI_COMMIT_SHORT_SHA"
    paths:
      - src-tauri/target/release/bundle/
    expire_in: 3 days
  when: manual
  except:
    - tags 